#+TITLE:DSC101 Diary
#+AUTHOR: Marcus Birkenkrahe
#+SUBTITLE: DSC101 Diary
#+STARTUP: hideblocks
#+options: ^:nil toc:1
* What is this?

  A place for irregular articles of possible interest to students of
  the DSC 101 course, mostly to avoid lengthy emails and to park
  content that I may want to develop later on time permitting.

* Redrawing Google trend chart (07-13-2021)
  Spent an afternoon rekindling some skills. Mean to show this during
  the introduction to datascience lecture but I probably won't get
  to. All of this started with this [[https://trends.google.com/trends/explore?date=all&q=data%20science,machine%20learning][infographic]] from Google's trend
  graph generator. I wanted to reproduce it using R, which took a
  couple of hours because I was quite out of shape.

** The original from ~trends.google.com~

   #+attr_html: :width 600px
   [[https://github.com/birkenkrahe/dsc101/blob/main/img/trends_google.png]]

** Trends from raw data

   #+attr_html: :width 600px
   [[https://github.com/birkenkrahe/dsc101/blob/main/img/trends.png]]

   #+attr_html: :width 600px
   [[https://github.com/birkenkrahe/dsc101/blob/main/img/avg.png]]

*** Download dataset as ~csv~ file

    Look at dataset: first two lines are spurious. Delete by hand so
    that the header line (column names) is the first line of the
    table:

    #+begin_example
 Category: All categories

 Month,Data science: (Worldwide),Machine learning: (Worldwide)
 2004-01,12,13
 2004-02,15,24
 2004-03,7,21
 2004-04,5,16
 2004-05,9,22
    #+end_example

*** Upload as data frame using ~read.table~

    To use the ~Month~ column as dates for a time series, turn
    ~trends$Month~ into date format Date conversion: this can be done
    with the ~anytime~ package which must be installed and loaded. I
    found out about this via [[https://stackoverflow.com/questions/44488439/format-year-month-to-posixct][stack.overflow]].

*** Create line plot

    Here is a [[https://www.statology.org/how-to-plot-multiple-lines-data-series-in-one-chart-in-r/][short tutorial]] on how to do this using the functions
    ~points()~, ~lines()~ and ~plot()~. The code is below.

    #+begin_src R :session :results file graphics :file ./img/trends.png
      ## read data from CSV file
      trends <- read.table(
          file="./data/multiTimeline.csv",
          header=TRUE,
          sep=",")

      ## convert Month column to Date format
      library(anytime)
      Month <- anydate(trends$Month)
      trends <- cbind(trends[,-1],Month)

      month <- trends$Month
      ds <- trends$Data.science
      ml <- trends$Machine.learning

      ## plot Data science search values
      plot(x=month,
           y=ds,
           xlab="years",
           ylab="Interest",
           ylim=c(0,max(c(ds,ml))),
           type="l",
           lty=1,
           col="blue")

      ## plot Machine learning search values
      lines(x=month,
            y=ml,
            lty=2,
            col="red")

      ## add a legend
      legend(x=month[1],
             y=85,
             legend=c("Data science","Machine learning"),
             lty=c(1,2),
             col=c("blue","red"))

    #+end_src

*** Code summary

    | ~read.table~         | upload data as ~data.frame~         |
    | ~library()~          | load R package                      |
    | ~anytime::anydate()~ | convert vector to ~Date~ format     |
    | ~cbind()~            | attach column to ~data.frame~       |
    | ~$~                  | extract vector from ~data.frame~    |
    | ~<-~                 | assign right hand to left hand side |
    | ~plot()~             | draw scatter plot                   |
    | ~lines()~            | draw line graph                     |
    | ~barplot()~          | draw barplot                        |

** Barplot   code

   For some simple examples, see this [[http://www.sthda.com/english/wiki/bar-plots-r-base-graphs#basic-bar-plots][short tutorial]].

   #+begin_src R :session :results file graphics :file ./img/avg.png
     ## read data from CSV file
     trends <- read.table(
         file="./data/multiTimeline.csv",
         header=TRUE,
         sep=",")

     ## convert Month column to Date format
     library(anytime)
     Month <- anydate(trends$Month)
     trends <- cbind(trends[,-1],Month)

     month <- trends$Month
     ds <- trends$Data.science
     ml <- trends$Machine.learning

     ## create the barplot from averages
     barplot(height=c(mean(ds),mean(ml)),
             names.arg=c("Data science","Machine learning"),
             ylab="Average interest (2004-2021)",
             col=c("blue","red"))
   #+end_src

* Data science process (07-15-2021)

  I was digging around my notes made for an online test lecture on May
  19, on "Exploring data with R" (see [[https://github.com/birkenkrahe/dsc101/blob/main/wiki/talk_presentation.pdf][presentation]] & [[https://github.com/birkenkrahe/dsc101/blob/main/wiki/talk_notes.pdf][notes]]), for an
  update on a [[https://github.com/birkenkrahe/dsc101/tree/main/2_datascience][data science overview lecture]]. For this talk, I had
  developed the model shown in figure [[fig:ds]]: there are two pathways
  towards machine learning. One pathway relied more on coding and
  algorithms (traditionally taught in CS programs), the other one
  relied more on modeling and heuristics (traditionally taught in
  maths and statistics programs).

  #+name: fig:ds
  [[https://github.com/birkenkrahe/dsc101/blob/main/img/data_science.png]]

  The model suppresses a lot of detail, of course, in order to
  emphasize the contrast between coding and modeling, e.g. many
  applications outside of CS, e.g. bioinformatics in biology.

  It came straight out of two lines of thought: one related to the
  experience of a CS professor that some CS students with more than
  average interest in mathematics wanted to specialize on data
  science. The other one related to my experience with exploratory
  data analysis as a way of solving hard, data rich problems for real
  clients (see figure [[fig:eda]]).

  #+name: fig:eda
  [[https://github.com/birkenkrahe/dsc101/blob/main/img/righteda.png]]

  I added this to the other two data science workflow images that I
  already had in the lecture. And I added yet another one (see figure
  [[fig:da]]), from a recent book on data analytics[fn:1]. I really like
  how everything comes back and returns to the "real world" here, and
  the feedback loop provided by the data analysis "pipeline".

  #+name: fig:da
  [[https://github.com/birkenkrahe/dsc101/blob/main/img/ds_workflow.jpg]]

  This is interesting, because it emphasizes the origin of most data
  from (digital) devices and sees EDA as a way of making decisions
  using various techniques (discussed in the book). I don't like the
  emphasis on "decisions", since "making decisions" as such is not a
  priority (there is no alternative). I prefer the old-fashioned way
  of looking at *problems* and trying to find *solutions*. I've also
  used the trendy term "decision intelligence" (made popular by Google
  et al.), but I think it overplays both "decisions" and
  "intelligence".

  Most data science problems may not lead to decisions, to change or
  to anything worth calling "intelligent". This is probably because of
  my training as a physicist, though later I worked with business
  people, who like the "decisions" and "challenges" lines of argument
  more than "problems" and "solutions" - I can't even remember
  why. The prejudice back in the day when this lingo came up was that
  "problems" sound too much as if you had a problem, with negative
  connotations, while "challenges" sounded as if you were worthy of a
  challenge, I suppose. Pointless to argue, since everyone know what's
  what anyway - except perhaps newbies.

  Enough said. I extracted these figures from their context and added
  them to the lecture - will see in August if this makes any
  difference or not[fn:2].

* "Teaching the tidyverse in 2021" (09-07-2021)

  I've mentioned the "tidyverse" before. This morning, I read an
  article (posted in RWeekly, the weekly aggregator of R news that you
  should subscribe to) "Teaching the tidyverse in 2021"
  ([[tidy21][Cetinkaya-Rundel, 2021]]), which upset me. I will briefly explain
  why. The article mentions the 2020 series of the same title, which
  begins with the claim that "updates to tidyverse packages are
  specifically designed to make it easier for new learners to get
  started with doing data science in R." ([[tidy20][Cetinkaya-Rundel, 2020]]).

  Instead of a long rant (see Matloff's "TidyverseSceptic" for a
  complete picture of the criticism), just look at the first figure,
  which shows "the lifecycle stages of functions and packages in the
  tidyverse". This is not a bad diagram at all, and it makes my point:
  a beginner, a learner of R, someone who wants to do data science,
  should not have to learn about package development mechanics:
  "experimental" vs. "deprecated" vs. "superseded" vs. "stable" -
  What? Exactly.

  [[./img/lifecycle.png]]

  Reader, R beginner, let me tell you: there is no "tidyverse"
  beginner's approach to R. You may like it or leave it (I prefer to
  leave it, for a number of reasons, though you may need to know it),
  but it's not an alternate R universe, and it's not an alternative to
  base R, no matter how many times the creators and contributors of
  this package bundle may say so.

* Data or graph checking projects (10-07-2021)

  Many of the project proposals by the course participants are still
  much too complex for my taste - the research questions need to be
  cut down to doable size.

  Not simple but highly effective are projects that don't do anything
  else but check published data and their interpretation. I mentioned
  a student project from last term. This team of Master students
  focused on a graph published in The Economist. I have uploaded their
  final report "Improve Visualization of Popular Support for Executive
  Actions in the U.S." and the data ([[cai][Cai, Otlu and Rauenbusch,
  2021]]). It's a very good piece of work, created with a lot of effort
  over a period of three months. Less would easily do for our course.

  Here is a more recent data checking example that you might find
  interesting, by [[matloff21][Matloff (2021)]]. This highly opinionated data
  checking post uses statistical arguments to check policy
  decisions. From the conclusions:

  #+begin_quote
  "The much-vaunted failure rate reduction from 40% to 8%, is not borne
  out by the data at all. The district cannot or will not show the
  details of those numbers, and they concede the numbers are not
  consistent with the data that the district did provide."
  #+end_quote

  For many more [[https://github.com/birkenkrahe/ds101/blob/master/ds_bookmarks.md#orgb216e90][interesting applications and project ideas]], see my
  2020 data science bookmarks file on GitHub.

  And here's a 2020 list of useful sites for [[https://towardsdatascience.com/useful-sites-for-finding-datasets-for-data-analysis-tasks-1edb8f26c34d][finding free, public
  datasets]] for EDA tasks.

* From the sickbed (11-02-2021)

  I've been too ill to teach for a couple of days (just a bad cold,
  nothing to worry about but still debilitating). This hasn't stopped
  me from hunting and gathering R examples. Here are a few recent
  captures.
  
** Webscraping example

   #+attr_html: :width 400px
   [[./img/webscraping.png]]

   #+begin_quote
   "Webscraping with R was critical to the success of my research."
   #+end_quote

   From a recent Master thesis. The author had to gather data from
   many different online curricula and collect them as a table for
   further analysis.
   
   Source: [[jens][Rauenbusch J (2021)]].

** New CRAN packages

   (Via [[https://rweekly.org/2021-W44.html][~RWeekly.org~]], which you should subscribe to!)

   #+attr_html: :width 400px
   [[./img/chaos.png]]

   /Image: chaos machine setup - original is clickable ([[https://urssblogg.netlify.app/post/2020-11-19-synthesizing-temperature-measurements-into-sound/][Wilke, 2021]])

   * ~cfbfastR~: Functions to Access College Football Play by Play
     Data (lvl=2
   * [[https://blogs.rstudio.com/ai/posts/2021-10-29-segmentation-torch-android/][Train in R, run on Android - image segmentation with ~torch~]]
     (lvl=3)
   * [[https://urssblogg.netlify.app/post/2020-11-19-synthesizing-temperature-measurements-into-sound/][Constructing a Chaos Machine]]: translating temperature
     measurements into sound in real time ([[https://gitlab.com/urswilke/chaos_machine_code/-/tree/master/R/preliminary_study/preliminary_study.md][R notebook]]) (lvl=3)

** "Tidyverse" tidbit

   #+begin_quote
   "Evangelist instructors write evangelistic exams."
   #+end_quote

   Comment by [[matloff][Norman Matloff]] on Twitter about this tweet:

   [[./img/tidyverse.png]]
   
   The ~data.table~ package, which contains the ~fread()~ function, is
   fantastically fast and overall wonderful. ~fread()~ is featured in
   the introductory data import with R course from DataCamp. You
   should also take a look at the full ~data.table~ course - see this
   [[https://www.datacamp.com/community/tutorials/data-table-cheat-sheet][introductory blog post]] for starters ([[willems][Willems, 2021]]).

** The battle between Python and R has been concluded

   I thought this article with the title from the headline ([[battle][Valdeleon,
   2021]]) is spot on - there's no need to pitch one of these languages
   against the other. Each of them has its pros and cons, and it
   depends on the job which one you should learn and use.

   In fact, many projects require knowledge of both R and Python -
   compare the project featured above where temperature measurements
   are turned into sound ([[wilke][Wilke 2021]]).
   
* References

  Really? References in a diary? I know that you know that I am not
  enjoying referencing: it's tedious, it slows me down, it's
  error-prone etc. But it must be done. If you're not convinced, don't
  get a university education, or better, don't work with information
  at all, because referencing is about (a) intellectual property
  rights (you should care about rights!), and (b) the truth (which
  must be spoken!).

  <<cai>> Cai Y, Otlu C, Rauenbusch J (28 June 2021). Improve
  Visualization of Popular Support for Executive Actions in the
  U.S. [Report]. Berlin School of Economics and Law. [[https://github.com/birkenkrahe/dsc101/tree/main/projects/examples/cai_et_al_2021][Online: GitHub.]]

  <<tidy20>> Cetinkaya-Rundel M (13 Jul 2020). Teaching the Tidyverse
  in 2020 - Part 1: Getting started [Blog]. [[https://education.rstudio.com/blog/2020/07/teaching-the-tidyverse-in-2020-part-1-getting-started/][Online:
  education.rstudio.com.]]

  <<tidy21>> Cetinkaya-Rundel M (31 Aug 2021). Teaching the Tidyverse
  in 2021 [Blog]. [[https://www.tidyverse.org/blog/2021/08/teach-tidyverse-2021/][Online: tidyverse.org.]]

  <<matloff>> Matloff N (2020). TidyverseSceptic - An alternate view
  of the Tidyverse "dialect" of the R language, and its promotion by
  RStudio. [[https://github.com/matloff/TidyverseSkeptic][Online: github.com]].

  <<matloff21>> Matloff N (9 Sept 2021). At Crossroads in California
  K-12 Math Education [Blog]. [[https://normsaysno.wordpress.com/2021/09/09/a-crossroads-in-california-k-12-math-education/][Online: normsaysno.wordpress.com.]]

  <<jens>> Rauenbusch J (2021). Design in MBA Education in the
  U.S. Towards a Design-Integrated Curriculum to Prepare Future
  Leaders for a Volatile, Uncertain, Complex, and Ambiguous (VUCA)
  World. MA thesis, Berlin School of Economics and Law.

  <<battle>> Valdeleon J (29 Aug 2021). The battle between Python & R
  has been concluded [blog]. URL: [[https://medium.com/codex/the-battle-between-python-r-has-been-concluded-b6ffda4ef87][medium.com]].

  <<wilke>> Wilke U (29 Oct 2021). The Chaos Machine - Synthesizing
  Temperature Measurements into Sound [Blog]. URL:
  [[https://urssblogg.netlify.app/post/2020-11-19-synthesizing-temperature-measurements-into-sound/][rssblogg.netlify.app]].

  <<willems>> Willems K (July 14th, 2021). The data.table R Package
  Cheat Sheet. URL: [[https://www.datacamp.com/community/tutorials/data-table-cheat-sheet][datacamp.com]].
  
* Footnotes

[fn:2]How will I know? Because it is clear from the discussion and the
students' response if I presented a figure or an argument that
resonates with them or not. Negative example: my insistence on base R
vs. Tidyverse, or on Open Source vs. commercial software, which I feel
strongly about - but I haven't been able to transfer my sentiments to
students. So perhaps these conflicts have less power than I thought.

[fn:1]Huang S/Deng H. Data analytics: a small data approach. CRC Press
(2021).
