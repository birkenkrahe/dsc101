* Are we going to use RStudio?
  No. [[https://rstudio.com/][RStudio]] is worth checking out, and it may well be what you use
  later in your data science career, but I think it is much too
  complex for beginners, and not really necessary at all. See
  screenshot in figure [[fig:rstudio]].

  #+name: fig:rstudio
  https://github.com/birkenkrahe/dsc101/blob/main/img/rstudio.png

  RStudio is a so-called "IDE" (Integrated Development Environment) -
  it presents a file editor (to create R programs, or notebooks), an R
  console (to enter commands interactively), a graphical output device
  (for plots), a file explorer, and an environment explorer (for
  loaded variables etc.), and more. It's a tool created for
  professionals and developers of packages[fn:1].

  I want you to focus on the basics. As a beginner, this will serve
  you best, I believe. It's a little like learning to drive on gear
  shift, and then upgrading to automatic transmission.

  I will however, show you RStudio, and we will also use it together
  (optionally) during the session on "Literate Programming".

  If you want to install RStudio on your computer, here is an
  excellent [[https://techvidvan.com/tutorials/install-r/][beginner's tutorial]].

* Which editor do you use?
  I use the free [[https://www.gnu.org/software/emacs/][Emacs]] editor. For R, I use Emacs + [[https://ess.r-project.org/][ESS]] ("Emacs Speaks
  Statistics"), for general notebooking and task management
  and...everything really, I use Emacs + ESS + [[https://orgmode.org/][Org-mode]] (a
  general-purpose task manager inside Emacs, first developed by
  physicists like me). For slides, I use the [[https://github.com/hakimel/reveal.js/][reveal.js]] (JavaScript)
  framework (generates HTML), or [[https://github.com/takaxp/org-tree-slide][org-tree-slide]] (for presenting
  straight from Org-mode).

  Emacs is hands down the best editor in the world, written in [[https://en.wikipedia.org/wiki/Lisp_(programming_language)][LISP]][fn:2],
  one of the earliest programming languages for AI research, and the
  second oldest language in widespread use (after FORTRAN).

  They say the learning curve of this "complex beast" ([[https://masteringemacs.org/article/beginners-guide-to-emacs][Petersen, 2019]])
  is steep but don't believe it.  Here is an link to [[https://opensource.com/article/20/3/getting-started-emacs][get started with
  Emacs easily]] (Kenlon, 2019). Tale a look!

  Here is a 2021 "[[https://ess-intro.github.io/][Introduction to Emacs Speaks Statistics]]" site with
  lots of additional information.

  Thee figure [[fig:emacs]] shows four (out of an arbitrary number of)
  panels inside the editor 

  #+name: fig:emacs
  https://github.com/birkenkrahe/dsc101/blob/main/img/emacs.png

* Footnotes

[fn:2]Actually, Emacs is written in a dialect of Lisp, EmacsLisp
(Elisp), and it is also the language in which Emacs can be customized,
which is one of its greatest advantages (it's a totally extensible
editor - unlike all the other IDEs and GUI-tools that you use). [[https://www.emacswiki.org/emacs/LearnEmacsLisp][Elisp
is easy to learn]].

[fn:1]It is unfortunate, that people (usually newbies) believe that "R
= RStudio = Tidyverse". This has to do with the great marketing
successes of RStudio (the company behind the product). Don't get me
wrong: there are many wonderful things about RStudio (e.g. it's Open
source). But you don't need it and it has a "lock-in" effect. I
e.g. use *Emacs + ESS + Org-mode* instead, but I also would not
recommend it for beginners.
